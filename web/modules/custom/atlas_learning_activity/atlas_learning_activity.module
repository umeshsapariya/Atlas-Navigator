<?php

/**
 * @file
 * Contains .module.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Url;
use Drupal\user\Entity\User;
use Drupal\node\Entity\Node;
use Drupal\Core\Database\Connection;
use Drupal\paragraphs\Entity\Paragraph;

/*
 * Implements hook_form_alter().
 */
function atlas_learning_activity_form_alter(&$form, $form_state, $form_id) {
  if ($form_id == 'node_learning_activity_form') {
    $form['#title'] = t('Activity Creator');
    //kint($form['field_activity_url']['widget'][0]['uri']['#description']);
    //exit();
    unset($form['field_activity_url']['widget'][0]['uri']['#description']);
    $current_user = \Drupal::currentUser();
    $roles = $current_user->getRoles();

    if (!in_array("administrator", $roles)) {
      $form['revision_information']['#access'] = false;
    }
    $form['field_activity_categories']['widget'][0]['subform']['field_activity_role']['widget']['#ajax'] = [
      'callback' => 'getAjaxCategoriesByRoles',
      'wrapper' => 'category',
      'effect' => 'fade',
      'event' => 'change',
    ];

    $form['field_activity_categories']['widget'][0]['subform']['field_activity_category']['widget']['#options'] = getAllCategories();
    $form['field_activity_categories']['widget'][0]['subform']['field_activity_skill']['widget']['#options'] = getAllSkills();  
    $form['field_activity_categories']['widget'][0]['subform']['field_activity_category']['widget']['#prefix'] ='<div id="category">';
    $form['field_activity_categories']['widget'][0]['subform']['field_activity_category']['widget']['#suffix'] = '</div>';
    $form['field_activity_categories']['widget'][0]['subform']['field_activity_category']['#validated'] = TRUE;

    /*$category_options = ['_none' => '- Select -'];
    $role_id = $form_state->getValues() ? $form_state->getValues()['role'] : '';
    if ($role_id != '_none' && $role_id != NULL) {
      $category_options = getCategoriesByRolesID($role_id);
    }
    $form['field_activity_categories']['widget'][0]['subform']['category'] = [
      '#type' => 'select',
      '#options' => $category_options,
      '#default_value' => $category_options,
      '#title' => 'Category',
      '#prefix' => '<div id="category">',
      '#suffix' => '</div>',*/
      /*'#ajax' => [
        'callback' => '\Drupal\atlas_clone_paragraphs\Form\CloneSkills::getSkillsByCategory',
        'wrapper' => 'skill',
        // 'method' => 'replace',.
        'effect' => 'fade',
        'event' => 'change',
      ],
*/      //'#required' => TRUE,
    /*];
    $form['field_activity_categories']['widget'][0]['subform']['category']['#validated'] = TRUE;

    $skill_options = ['_none' => '- Select -'];
    $category_id = $form_state->getValues() ? $form_state->getValues()['category'] : '';
    if ($category_id != '_none' && $category_id != NULL) {
      $skill_options = getSkillsByCategoryID($category_id);
    }
    $form['field_activity_categories']['widget'][0]['subform']['skill'] = [
      '#type' => 'select',
      '#options' => $skill_options,
      '#default_value' => $skill_options,
      '#title' => 'Skill',
      '#prefix' => '<div id="skill">',
      '#suffix' => '</div>',
      //'#required' => TRUE,
    ];
    $form['skill']['#validated'] = TRUE;*/
    /*$form['field_activity_categories']['widget'][0]['subform']['field_activity_role'] = [
      //'#type' => 'select',
      //'#options' => $roles,
      //'#title' => 'Role',
      '#ajax' => [
        'callback' => 'getAjaxCategoriesByRoles',
        'wrapper' => 'category',
        // 'method' => 'replace',.
        'effect' => 'fade',
        'event' => 'change',
      ],
      '#required' => TRUE,
    ];*/
    //return $form;
  }
}

/*
 * Implements AJAX callback for categories().
 */
function getAjaxCategoriesByRoles($form, FormStateInterface $form_state) {

  $form_state->setRebuild(TRUE);
  $category = ['_none' => '- Select -'];
  $role_id = $form_state->getValues()['field_activity_categories'][0]['subform']['field_activity_role'][0]['target_id'];
  \Drupal::logger('Role')->debug('<pre>' . print_r($role_id, TRUE) . '</pre>');
  if ($role_id != 0 && $role_id != NULL) {
    $node = Node::load($role_id);
    $paragraph = $node->field_category->getValue();
    foreach ($paragraph as $element) {
      $p = Paragraph::load($element['target_id']);
      $category_nm = $p->field_new_category->value;
      $category[$element['target_id']] = $category_nm;
    }
    \Drupal::logger('Category')->debug('<pre>' . print_r($category, TRUE) . '</pre>');
    if ($category) {
      $form['field_activity_categories']['widget'][0]['subform']['field_activity_category']['widget']['#options'] = $category;
    }
    else {
      $form['field_activity_categories']['widget'][0]['subform']['field_activity_category']['widget']['#options'] = ['NA' => 'NA'];
    }

    return $form['field_activity_categories']['widget'][0]['subform']['field_activity_category'];
  }
  else {
    $form['field_activity_categories']['widget'][0]['subform']['field_activity_category']['widget']['#options'] = ['NA' => 'NA'];
    return $form['field_activity_categories']['widget'][0]['subform']['field_activity_category'];
  }
}

/*
 * Fetch all categories.
 */
function getAllCategories() {
  $category = ['_none' => '- Select -'];
  $query = \Drupal::database()->select('paragraph__field_new_category', 'pfc');
  $query->fields('pfc', ['entity_id', 'field_new_category_value']);
  $query->fields('pfd', ['parent_id']);
  $query->join('paragraphs_item_field_data', 'pfd', 'pfd.revision_id = pfc.entity_id');
  $query->condition('pfd.parent_field_name', 'field_category');
  $query->condition('pfc.bundle', 'category');
  $query->distinct('pfc.entity_id');

  $data = $query->execute()->fetchAll();
  if (!empty($data)) {
    foreach ($data as $id => $category_data) {
      $category[$id] = $category_data->field_new_category_value;
    }
  }
  return $category;
}

/*
 * Fetch all skills.
 */
function getAllSkills() {
  $skill = ['_none' => '- Select -'];
  $query = \Drupal::database()->select('paragraph__field_skill', 'pfc');
  $query->fields('pfc', ['entity_id', 'field_skill_value']);
  $query->fields('pfd', ['parent_id']);
  $query->join('paragraphs_item_field_data', 'pfd', 'pfd.revision_id = pfc.entity_id');
  $query->condition('pfd.parent_field_name', 'field_skills');
  $query->condition('pfc.bundle', 'skill');
  $query->distinct('pfc.entity_id');

  $data = $query->execute()->fetchAll();
  if (!empty($data)) {
    foreach ($data as $id => $skill_data) {
      $skill[$id] = $skill_data->field_skill_value;
    }
  }
  return $skill;
}
